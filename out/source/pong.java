/* autogenerated by Processing revision 1292 on 2023-05-08 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class pong extends PApplet {

// Variáveis para utilização do menu
int X_retangulo, Y_retangulo; // Posição do botão quadrado
int X_circulo, Y_circulo;     // Posição do botão círculo
int rectSize = 90;     // Diâmetro do retângulo
int circleSize = 93;   // Diâmetro do retângulo
int rectColor, circleColor, baseColor;
int rectHighlight, circleHighlight;
int currentColor;
boolean rectOver = false;
boolean circleOver = false;

PShape pointer;

public void setup() {
  // Sinalização em tela da criação da janela
  println("Criando janela menu principal");
  // Criação da janela principal
  /* size commented out by preprocessor */;
  
  // Parâmetros do botão retangular
  // TODO: Criar própria função 'rect' e 'triangle'
  rectColor = color(0);
  rectHighlight = color(51);
  X_retangulo = width/2-rectSize-10;
  Y_retangulo = height/2-rectSize/2;

  // Parâmetros do botão circular
  circleColor = color(255);
  circleHighlight = color(204);
  X_circulo = width/2+circleSize/2+10;
  Y_circulo = height/2;

  ellipseMode(CENTER);  
  
  // Criação das formas na tela principal
  rect(X_retangulo, Y_retangulo, rectSize, rectSize);
  ellipse(X_circulo, Y_circulo, circleSize, circleSize);

  
  // Ponteiro centralizado no mouse, compartilhado entre as janelas
  pointer = createShape(ELLIPSE, 0, 0, 20, 20);

  // Muda localização da janela principal
  windowMove(0, 0);
}


  public void settings() { size(300, 300, P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "pong" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
